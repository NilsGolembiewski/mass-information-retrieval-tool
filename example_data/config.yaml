# --- Configuration for Mass Information Retrieval Tool ---

# Input CSV file path
input_csv: "example_data/input.csv" # IMPORTANT: Update this path to your actual input file

# Output CSV file path (will be created)
output_csv: "example_data/output.csv" # IMPORTANT: Update this path if needed

# List of column names in the input CSV containing the key information
key_columns: ["CompanyName"] # IMPORTANT: Update this list with your actual column names

# Google Gemini API configuration
# gemini_model: "gemini-2.5-pro-preview-03-25" # Using 2.5 Pro Preview model
gemini_model: "gemini-2.5-flash" # Using 2.5 Pro Preview model
api_key_env_var: "GEMINI_API_KEY" # Name of the environment variable holding the API key

# Parallel processing configuration
max_parallel_requests: 5 # Maximum number of concurrent API requests (adjust as needed)

# Schema definition for the information to retrieve
# Keys are the desired output column names, values are the expected data types (str, int, float, bool)
schema:
  number_of_employees: int
  annual_revenue: float
  headquarters_location: str
  year_founded: int
  industry: str
  website: str
  # Add more fields as needed

# Prompt template for querying Gemini
# Use {key_values_json} as a placeholder for the JSON object containing the key-value pairs from the key_columns
# Prompt template for querying Gemini for a single field value
# Use {key_values_json} for the input item's key data (JSON string)
# Use {field_name} for the target field name
# Use {field_type} for the expected data type/format
single_field_prompt_template: |
  Context:
  - Item details: {key_values_json}
  - Target field: '{field_name}'
  - Expected type/format: '{field_type}' # e.g., int, str, bool, or specific categories

  Task:
  Find the value for the single field '{field_name}' for the described item. Use the Google Search tool if necessary to find the most accurate and up-to-date information.

  Constraints for specific fields:
  # Add specific constraints here if needed, e.g.:
  # - If '{field_name}' is 'aantal_werknemers', the value must be one of these categories: "0-100", "101-499", or "500+".

  Output Format:
  Return a single JSON object with one key: "value". The value associated with this key should be the found information for '{field_name}', matching the expected type/format.
  Example for 'year_founded': {{"value": 1984}}
  Example for 'headquarters_location': {{"value": "San Jose, CA"}}
  If the value cannot be determined, return: {{"value": null}}
  Ensure the output is ONLY the valid JSON object.
